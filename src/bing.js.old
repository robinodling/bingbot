
'use strict'

const _ = require('lodash')

const config = require('./config')
const pgp = require('pg-promise')();

//const pg = require('pg')
//const client = new pg.Client(config('DATABASE_URL'))
//const client = new pg.Client()

const cn = {
  host: config('PGHOST'),
  port: config('PGPORT'),
  database: config('PGDATABASE'),
  user: config('PGUSER'),
  password: config('PGPASSWORD'),
  poolSize: config('PGPOOLSIZE')
}

const db = pgp(cn)
/*
function bing_sql(uid, quantity, article) {
  
  db.none("insert into bing (uid, timestamp, quantity, article) values ($1, now(), $2, $3)", [uid, quantity, article])
    .then(function() {
      //Success
      console.log("Successfully added bing " + article + " with quantity " + quantity)
    })
    .catch(function(error) {
      console.log("Something went wrong when inserting new bing!");
      console.log("ERROR:", error.message || error);
    });
  


  /*client.query('insert into bing ("uid", "timestamp", "quantity", "article") values ($1, now(), $2, $3)', 
    [uid, quantity, article], 
    function (err, res) {
      if (err) throw err
      
      client.end(function (err) {
        if (err) throw err
      })
    }
  )
  
}
*/

function binga(bot, uid, quantity, article) {
  
  db.task(function (t) {

    t.oneOrNone("select uid from users where uid=$1", [uid])
      .then(function(uid) {
        //Success
        console.log("Successfully fethched user with uid " + uid)

        if (uid == null){
          //Could not fetch user. Create user
          console.log("Could not find user with uid " + uid)
          //Fetch user info
          bot.api.users.info({
            user: uid
          }, function(err, res) {
            if (err) throw err

            if(res.ok == true) {

              t.none("insert into users values ($1, $2, $3, $4, $5)", 
                [res.user.id, 
                res.user.name, 
                res.user.profile.email, 
                res.user.profile.first_name, 
                res.user.profile.last_name]
              )
              .then(function() {
                //Success
                console.log("Successfully inserted user " + nick + " with real name " + first_name + " " + last_name)
              })
              .catch(function(error) {
                console.log("Something went wrong when inserting new user!");
                console.log("ERROR:", error.message || error);
              });

            }

          })
          
        }else{
          
          t.none("insert into bing (uid, timestamp, quantity, article) values ($1, now(), $2, $3)", 
            [uid, 
            quantity, 
            article])
          .then(function() {
            //Success
            console.log("Successfully added bing " + article + " with quantity " + quantity)
          })
          .catch(function(error) {
            console.log("Something went wrong when inserting new bing!");
            console.log("ERROR:", error.message || error);
          });
        }

        
      })
      .catch(function(error) {
        console.log("Something went wrong when selecting user!\n");
        console.log("ERROR:", error.message || error);
      });

  })
  .then(function() {
    //Success
    console.log("Task end")
  })
  .catch(function(error) {

  });

  

/*
  client.connect(function (err) {
    if (err) throw err


    client.query('select uid from users where uid=$1', [uid], function (err, res) {
      if (err) throw err
      
      if (res.rowCount==0) {
        bot.api.users.info({
          user: uid
        }, function(err, res) {
          if (err) throw err
          
          if (res.ok == true) {
            let uid        = res.user.id
            let nick       = res.user.name
            let email      = res.user.profile.email
            let first_name = res.user.profile.first_name
            let last_name  = res.user.profile.last_name
            
            client.query('insert into users values ($1, $2, $3, $4, $5)', 
              [uid, 
               nick,
               email,
               first_name,
               last_name],
              function (err, res) {
                if (err) throw err
                
                bing_sql(uid, quantity, article)
              }
            )
          }
        })
      }
      else {
        bing_sql(uid, quantity, article)
      }
    })


  })
  */

}

module.exports = (bot, uid, quantity, article) => {
  binga(bot, uid, quantity, article)
}
